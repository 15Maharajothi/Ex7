package passwordStrenghtchecker;
import java.util.Scanner;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

public class PasswordStrengthChecker {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        while (true) {
            System.out.print("Please enter a password: ");
            String password = scanner.nextLine();
            
            if (isStrongPassword(password)) {
                System.out.println("Password strength: Strong");
                System.out.println("Password is strong. You may proceed.");
                break;
            } else if (isModeratePassword(password)) {
                System.out.println("Password strength: Moderate");
            } else {
                System.out.println("Password strength: Weak");
            }
        }
    }

    private static boolean isStrongPassword(String password) {
        return (password.length() >= 8) &&
               containsUppercase(password) &&
               containsLowercase(password) &&
               containsDigit(password) &&
               containsSpecialCharacter(password);
    }

    private static boolean isModeratePassword(String password) {
        return (password.length() >= 8) &&
               containsUppercase(password) &&
               containsLowercase(password) &&
               containsDigit(password);
    }

    private static boolean containsUppercase(String password) {
        return !password.equals(password.toLowerCase());
    }

    private static boolean containsLowercase(String password) {
        return !password.equals(password.toUpperCase());
    }

    private static boolean containsDigit(String password) {
        for (char c : password.toCharArray()) {
            if (Character.isDigit(c)) {
                return true;
            }
        }
        return false;
    }

    private static boolean containsSpecialCharacter(String password) {
        Pattern specialCharacterPattern = Pattern.compile("[!@#$%^&*()_+\\-=\\[\\]{};':\",.<>?]");
        Matcher matcher = specialCharacterPattern.matcher(password);
        return matcher.find();
    }
}
